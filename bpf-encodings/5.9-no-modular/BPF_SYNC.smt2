(declare-fun cond35.i.i_48_60 () (_ BitVec 64))
(declare-fun cond27.i19.i_48_132 () (_ BitVec 64))
(declare-fun cond14.i8.i_48_54 () (_ BitVec 64))
(declare-fun cmp23.i18.i_48_131 () (_ BitVec 1))
(declare-fun or.cond_48_66 () (_ BitVec 1))
(declare-fun cmp16.i.i_48_72 () (_ BitVec 1))
(declare-fun cmp31.i.i8_48_76 () (_ BitVec 1))
(declare-fun or.cond4_48_124 () (_ BitVec 1))
(declare-fun cmp16.i15.i_48_130 () (_ BitVec 1))
(declare-fun cond36.i.i_48_42 () (_ BitVec 32))
(declare-fun cond12.i.i_48_70 () (_ BitVec 32))
(declare-fun cond14.i.i_48_33 () (_ BitVec 32))
(declare-fun cmp8.i.i_48_69 () (_ BitVec 1))
(declare-fun cond24.i.i_48_37 () (_ BitVec 32))
(declare-fun cond.i.i6_48_68 () (_ BitVec 32))
(declare-fun cond.i.i_48_26 () (_ BitVec 32))
(declare-fun cmp3.i.i_48_67 () (_ BitVec 1))
(declare-fun cond12.i12.i_48_128 () (_ BitVec 64))
(declare-fun cmp8.i11.i_48_127 () (_ BitVec 1))
(declare-fun cond23.i.i_48_57 () (_ BitVec 64))
(declare-fun cond.i8.i_48_126 () (_ BitVec 64))
(declare-fun cond.i7.i_48_48 () (_ BitVec 64))
(declare-fun cmp3.i7.i_48_125 () (_ BitVec 1))
(declare-fun cond40.i24.i_48_136 () (_ BitVec 64))
(declare-fun cmp36.i23.i_48_135 () (_ BitVec 1))
(declare-fun cmp31.i21.i_48_134 () (_ BitVec 1))
(declare-fun dst_reg_48_118 () (_ BitVec 8))
(declare-fun dst_reg_48_17 () (_ BitVec 8))
(declare-fun dst_reg_48_117 () (_ BitVec 32))
(declare-fun dst_reg_48_16 () (_ BitVec 32))
(declare-fun dst_reg_48_116 () (_ BitVec 32))
(declare-fun dst_reg_48_15 () (_ BitVec 32))
(declare-fun dst_reg_48_115 () (_ BitVec 32))
(declare-fun dst_reg_48_14 () (_ BitVec 32))
(declare-fun dst_reg_48_114 () (_ BitVec 32))
(declare-fun dst_reg_48_113 () (_ BitVec 32))
(declare-fun dst_reg_48_112 () (_ BitVec 32))
(declare-fun dst_reg_48_111 () (_ BitVec 32))
(declare-fun dst_reg_48_110 () (_ BitVec 64))
(declare-fun dst_reg_48_109 () (_ BitVec 64))
(declare-fun dst_reg_48_108 () (_ BitVec 64))
(declare-fun dst_reg_48_107 () (_ BitVec 64))
(declare-fun dst_reg_48_106 () (_ BitVec 64))
(declare-fun dst_reg_48_5 () (_ BitVec 64))
(declare-fun dst_reg_48_105 () (_ BitVec 64))
(declare-fun dst_reg_48_4 () (_ BitVec 64))
(declare-fun dst_reg_48_104 () (_ BitVec 32))
(declare-fun dst_reg_48_3 () (_ BitVec 32))
(declare-fun dst_reg_48_103 () (_ BitVec 32))
(declare-fun dst_reg_48_2 () (_ BitVec 32))
(declare-fun dst_reg_48_102 () (_ BitVec 32))
(declare-fun dst_reg_48_1 () (_ BitVec 32))
(declare-fun dst_reg_48_101 () (_ BitVec 32))
(declare-fun dst_reg_48_0 () (_ BitVec 32))
(declare-fun dst_reg_48_96 () (_ BitVec 8))
(declare-fun dst_reg_48_95 () (_ BitVec 32))
(declare-fun dst_reg_48_94 () (_ BitVec 32))
(declare-fun dst_reg_48_93 () (_ BitVec 32))
(declare-fun dst_reg_48_92 () (_ BitVec 32))
(declare-fun dst_reg_48_91 () (_ BitVec 32))
(declare-fun cond36.i.i.sink_48_100 () (_ BitVec 32))
(declare-fun dst_reg_48_89 () (_ BitVec 32))
(declare-fun dst_reg_48_88 () (_ BitVec 64))
(declare-fun dst_reg_48_87 () (_ BitVec 64))
(declare-fun dst_reg_48_86 () (_ BitVec 64))
(declare-fun dst_reg_48_85 () (_ BitVec 64))
(declare-fun dst_reg_48_84 () (_ BitVec 64))
(declare-fun dst_reg_48_83 () (_ BitVec 64))
(declare-fun dst_reg_48_82 () (_ BitVec 32))
(declare-fun dst_reg_48_81 () (_ BitVec 32))
(declare-fun dst_reg_48_80 () (_ BitVec 32))
(declare-fun dst_reg_48_79 () (_ BitVec 32))
(declare-fun cmp1.i4.i_48_122 () (_ BitVec 1))
(declare-fun cmp.i2.i_48_120 () (_ BitVec 1))
(declare-fun if.then.i.i___reg32_deduce_bounds.exit.i.sink.split_48_99 () Bool)
(declare-fun if.then17.i.i___reg32_deduce_bounds.exit.i.sink.split_48_98
             ()
             Bool)
(declare-fun if.then32.i.i___reg32_deduce_bounds.exit.i.sink.split_48_97
             ()
             Bool)
(declare-fun cond40.i.i_48_78 () (_ BitVec 32))
(declare-fun dst_reg_48_90 () (_ BitVec 32))
(declare-fun cond27.i.i_48_74 () (_ BitVec 32))
(declare-fun cmp1.i.i_48_64 () (_ BitVec 1))
(declare-fun cmp.i.i3_48_62 () (_ BitVec 1))
(declare-fun and.i.i.i.i1_48_39 () (_ BitVec 64))
(declare-fun i27.i10.i_48_58 () (_ BitVec 64))
(declare-fun cmp31.i11.i_48_59 () (_ BitVec 1))
(declare-fun dst_reg_48_9 () (_ BitVec 64))
(declare-fun i22.i.i_48_18 () (_ BitVec 64))
(declare-fun i26.i.i_48_55 () (_ BitVec 64))
(declare-fun cmp19.i9.i_48_56 () (_ BitVec 1))
(declare-fun dst_reg_48_8 () (_ BitVec 64))
(declare-fun or8.i.i_48_52 () (_ BitVec 64))
(declare-fun i25.i.i_48_49 () (_ BitVec 64))
(declare-fun cmp10.i.i_48_53 () (_ BitVec 1))
(declare-fun and7.i.i_48_51 () (_ BitVec 64))
(declare-fun i24.i.i_48_19 () (_ BitVec 64))
(declare-fun dst_reg_48_7 () (_ BitVec 64))
(declare-fun or.i5.i_48_46 () (_ BitVec 64))
(declare-fun i.i1.i_48_43 () (_ BitVec 64))
(declare-fun cmp.i6.i_48_47 () (_ BitVec 1))
(declare-fun and.i4.i_48_45 () (_ BitVec 64))
(declare-fun dst_reg_48_6 () (_ BitVec 64))
(declare-fun conv29.i.i_48_40 () (_ BitVec 32))
(declare-fun i30.i.i_48_38 () (_ BitVec 32))
(declare-fun cmp31.i.i_48_41 () (_ BitVec 1))
(declare-fun dst_reg_48_13 () (_ BitVec 32))
(declare-fun conv17.i.i_48_35 () (_ BitVec 32))
(declare-fun i29.i.i_48_34 () (_ BitVec 32))
(declare-fun cmp19.i.i_48_36 () (_ BitVec 1))
(declare-fun dst_reg_48_12 () (_ BitVec 32))
(declare-fun conv7.i.i_48_31 () (_ BitVec 32))
(declare-fun i28.i.i_48_27 () (_ BitVec 32))
(declare-fun cmp9.i.i_48_32 () (_ BitVec 1))
(declare-fun or6.i.i_48_30 () (_ BitVec 64))
(declare-fun and5.i.i_48_29 () (_ BitVec 64))
(declare-fun dst_reg_48_11 () (_ BitVec 32))
(declare-fun conv.i.i_48_24 () (_ BitVec 32))
(declare-fun i27.i.i_48_20 () (_ BitVec 32))
(declare-fun cmp.i.i_48_25 () (_ BitVec 1))
(declare-fun or.i.i_48_23 () (_ BitVec 64))
(declare-fun and.i.i_48_22 () (_ BitVec 64))
(declare-fun dst_reg_48_10 () (_ BitVec 32))
(declare-fun cmp23.i.i_48_73 () (_ BitVec 1))
(declare-fun cmp36.i.i_48_77 () (_ BitVec 1))
(declare-fun if.then.i13.i___reg_deduce_bounds.exit.sink.split_48_157 () Bool)
(declare-fun if.then17.i20.i___reg_deduce_bounds.exit.sink.split_48_156 () Bool)
(declare-fun if.then32.i25.i___reg_deduce_bounds.exit.sink.split_48_155 () Bool)
(declare-fun dst_reg_48_154 () (_ BitVec 8))
(declare-fun dst_reg_48_153 () (_ BitVec 32))
(declare-fun dst_reg_48_152 () (_ BitVec 32))
(declare-fun dst_reg_48_151 () (_ BitVec 32))
(declare-fun dst_reg_48_150 () (_ BitVec 32))
(declare-fun dst_reg_48_149 () (_ BitVec 32))
(declare-fun dst_reg_48_148 () (_ BitVec 32))
(declare-fun dst_reg_48_147 () (_ BitVec 32))
(declare-fun dst_reg_48_146 () (_ BitVec 64))
(declare-fun dst_reg_48_145 () (_ BitVec 64))
(declare-fun dst_reg_48_144 () (_ BitVec 64))
(declare-fun dst_reg_48_143 () (_ BitVec 64))
(declare-fun dst_reg_48_142 () (_ BitVec 64))
(declare-fun dst_reg_48_141 () (_ BitVec 64))
(declare-fun dst_reg_48_140 () (_ BitVec 32))
(declare-fun dst_reg_48_139 () (_ BitVec 32))
(declare-fun dst_reg_48_138 () (_ BitVec 32))
(declare-fun dst_reg_48_137 () (_ BitVec 32))
(declare-fun cond35.i.i.sink_48_158 () (_ BitVec 64))
(declare-fun add.i.i.i_48_225 () (_ BitVec 32))
(declare-fun phi.bo_48_227 () (_ BitVec 32))
(declare-fun i.i.i.i.i.neg_48_224 () (_ BitVec 32))
(declare-fun num.4.i.i.i.i_48_221 () (_ BitVec 32))
(declare-fun word.addr.4.lobit.i.i.i.i.neg_48_223 () (_ BitVec 64))
(declare-fun word.addr.4.i.i.i.i_48_220 () (_ BitVec 64))
(declare-fun num.3.i.i.i.i_48_213 () (_ BitVec 32))
(declare-fun sub22.i.i.i.i_48_217 () (_ BitVec 32))
(declare-fun tobool20.not.i.i.i.i_48_215 () (_ BitVec 1))
(declare-fun word.addr.3.i.i.i.i_48_212 () (_ BitVec 64))
(declare-fun shl23.i.i.i.i_48_219 () (_ BitVec 64))
(declare-fun num.2.i.i.i.i_48_205 () (_ BitVec 32))
(declare-fun sub16.i.i.i.i_48_209 () (_ BitVec 32))
(declare-fun tobool14.not.i.i.i.i_48_207 () (_ BitVec 1))
(declare-fun word.addr.2.i.i.i.i_48_204 () (_ BitVec 64))
(declare-fun shl17.i.i.i.i_48_211 () (_ BitVec 64))
(declare-fun num.1.i.i.i.i_48_197 () (_ BitVec 32))
(declare-fun sub10.i.i.i.i_48_201 () (_ BitVec 32))
(declare-fun tobool8.not.i.i.i.i_48_199 () (_ BitVec 1))
(declare-fun word.addr.1.i.i.i.i_48_196 () (_ BitVec 64))
(declare-fun shl11.i.i.i.i_48_203 () (_ BitVec 64))
(declare-fun spec.select17.i.i.i.i_48_189 () (_ BitVec 32))
(declare-fun sub4.i.i.i.i_48_193 () (_ BitVec 32))
(declare-fun tobool2.not.i.i.i.i_48_191 () (_ BitVec 1))
(declare-fun spec.select.i.i.i.i_48_186 () (_ BitVec 64))
(declare-fun shl5.i.i.i.i_48_195 () (_ BitVec 64))
(declare-fun tobool.not.i.i.i.i_48_183 () (_ BitVec 1))
(declare-fun xor.i.i_48_179 () (_ BitVec 64))
(declare-fun shl.i.i.i.i_48_185 () (_ BitVec 64))
(declare-fun cmp.i.i.i_48_181 () (_ BitVec 1))
(declare-fun dst_reg_48_176 () (_ BitVec 8))
(declare-fun dst_reg_48_175 () (_ BitVec 32))
(declare-fun dst_reg_48_174 () (_ BitVec 32))
(declare-fun dst_reg_48_173 () (_ BitVec 32))
(declare-fun dst_reg_48_172 () (_ BitVec 32))
(declare-fun dst_reg_48_171 () (_ BitVec 32))
(declare-fun dst_reg_48_170 () (_ BitVec 32))
(declare-fun dst_reg_48_169 () (_ BitVec 32))
(declare-fun dst_reg_48_168 () (_ BitVec 64))
(declare-fun dst_reg_48_167 () (_ BitVec 64))
(declare-fun dst_reg_48_166 () (_ BitVec 64))
(declare-fun dst_reg_48_165 () (_ BitVec 64))
(declare-fun dst_reg_48_164 () (_ BitVec 64))
(declare-fun dst_reg_48_163 () (_ BitVec 64))
(declare-fun dst_reg_48_162 () (_ BitVec 32))
(declare-fun dst_reg_48_161 () (_ BitVec 32))
(declare-fun dst_reg_48_160 () (_ BitVec 32))
(declare-fun dst_reg_48_159 () (_ BitVec 32))
(declare-fun i.i_48_177 () (_ BitVec 64))
(declare-fun i8.i_48_178 () (_ BitVec 64))
(declare-fun __reg_deduce_bounds.exit_tnum_range.exit.i_48_229 () Bool)
(declare-fun if.end.i.i.i_tnum_range.exit.i_48_228 () Bool)
(declare-fun cmp.i.i5.i_48_246 () (_ BitVec 1))
(declare-fun xor.i4.i2_48_244 () (_ BitVec 32))
(declare-fun i19.i_48_242 () (_ BitVec 32))
(declare-fun i20.i_48_243 () (_ BitVec 32))
(declare-fun retval.sroa.3.0.i.i_48_240 () (_ BitVec 64))
(declare-fun and.i1.i_48_241 () (_ BitVec 64))
(declare-fun sub.i.i_48_238 () (_ BitVec 64))
(declare-fun cmp.i.i14_48_233 () (_ BitVec 1))
(declare-fun notmask.i.i_48_236 () (_ BitVec 64))
(declare-fun sh_prom.i.i_48_234 () (_ BitVec 64))
(declare-fun retval.0.i.i.i_48_230 () (_ BitVec 32))
(declare-fun add.i.i34.i_48_284 () (_ BitVec 32))
(declare-fun phi.bo3_48_286 () (_ BitVec 32))
(declare-fun i.i.i.i31.i.neg_48_283 () (_ BitVec 32))
(declare-fun num.4.i.i.i29.i_48_280 () (_ BitVec 32))
(declare-fun word.addr.4.lobit.i.i.i30.i.neg_48_282 () (_ BitVec 64))
(declare-fun word.addr.4.i.i.i28.i_48_279 () (_ BitVec 64))
(declare-fun num.3.i.i.i24.i_48_272 () (_ BitVec 32))
(declare-fun sub22.i.i.i26.i_48_276 () (_ BitVec 32))
(declare-fun tobool20.not.i.i.i25.i_48_274 () (_ BitVec 1))
(declare-fun word.addr.3.i.i.i23.i_48_271 () (_ BitVec 64))
(declare-fun shl23.i.i.i27.i_48_278 () (_ BitVec 64))
(declare-fun num.2.i.i.i19.i_48_264 () (_ BitVec 32))
(declare-fun sub16.i.i.i21.i_48_268 () (_ BitVec 32))
(declare-fun tobool14.not.i.i.i20.i_48_266 () (_ BitVec 1))
(declare-fun word.addr.2.i.i.i18.i_48_263 () (_ BitVec 64))
(declare-fun shl17.i.i.i22.i_48_270 () (_ BitVec 64))
(declare-fun num.1.i.i.i14.i_48_256 () (_ BitVec 32))
(declare-fun sub10.i.i.i16.i_48_260 () (_ BitVec 32))
(declare-fun tobool8.not.i.i.i15.i_48_258 () (_ BitVec 1))
(declare-fun word.addr.1.i.i.i13.i_48_253 () (_ BitVec 64))
(declare-fun shl11.i.i.i17.i_48_262 () (_ BitVec 64))
(declare-fun tobool2.not.i.i.i10.i_48_249 () (_ BitVec 1))
(declare-fun word.addr.1.i.i.i13.i.v_48_252 () (_ BitVec 64))
(declare-fun xor.i4.i_48_247 () (_ BitVec 64))
(declare-fun dst_reg_48_346 () (_ BitVec 8))
(declare-fun dst_reg_48_345 () (_ BitVec 32))
(declare-fun dst_reg_48_344 () (_ BitVec 32))
(declare-fun dst_reg_48_343 () (_ BitVec 32))
(declare-fun dst_reg_48_342 () (_ BitVec 32))
(declare-fun dst_reg_48_341 () (_ BitVec 32))
(declare-fun dst_reg_48_340 () (_ BitVec 32))
(declare-fun dst_reg_48_339 () (_ BitVec 32))
(declare-fun dst_reg_48_338 () (_ BitVec 64))
(declare-fun dst_reg_48_337 () (_ BitVec 64))
(declare-fun dst_reg_48_336 () (_ BitVec 64))
(declare-fun dst_reg_48_335 () (_ BitVec 64))
(declare-fun dst_reg_48_334 () (_ BitVec 64))
(declare-fun and.i58.i_48_328 () (_ BitVec 64))
(declare-fun dst_reg_48_333 () (_ BitVec 64))
(declare-fun or.i56.i_48_324 () (_ BitVec 64))
(declare-fun dst_reg_48_332 () (_ BitVec 32))
(declare-fun dst_reg_48_331 () (_ BitVec 32))
(declare-fun dst_reg_48_330 () (_ BitVec 32))
(declare-fun dst_reg_48_329 () (_ BitVec 32))
(declare-fun tnum_range.exit.i___reg_bound_offset.exit_48_288 () Bool)
(declare-fun if.end.i.i35.i___reg_bound_offset.exit_48_287 () Bool)
(declare-fun neg.i57.i_48_327 () (_ BitVec 64))
(declare-fun or3.i.i_48_325 () (_ BitVec 64))
(declare-fun shr5.i.i.i_48_323 () (_ BitVec 64))
(declare-fun and.i49.i_48_313 () (_ BitVec 64))
(declare-fun shr.i.i.i_48_321 () (_ BitVec 64))
(declare-fun and4.i51.i_48_316 () (_ BitVec 64))
(declare-fun or.i.i16_48_299 () (_ BitVec 64))
(declare-fun and4.i.i_48_320 () (_ BitVec 64))
(declare-fun neg.i.i_48_318 () (_ BitVec 64))
(declare-fun neg.i50.i_48_315 () (_ BitVec 64))
(declare-fun or.i48.i_48_312 () (_ BitVec 64))
(declare-fun retval.sroa.3.0.i44.i_48_311 () (_ BitVec 64))
(declare-fun and6.i.i.i_48_293 () (_ BitVec 64))
(declare-fun and.i.i.i_48_295 () (_ BitVec 64))
(declare-fun retval.sroa.0.0.i43.i_48_309 () (_ BitVec 64))
(declare-fun sub.i41.i_48_306 () (_ BitVec 64))
(declare-fun cmp.i38.i_48_301 () (_ BitVec 1))
(declare-fun and.i42.i_48_307 () (_ BitVec 64))
(declare-fun conv.i_48_291 () (_ BitVec 64))
(declare-fun notmask.i40.i_48_304 () (_ BitVec 64))
(declare-fun sh_prom.i39.i_48_302 () (_ BitVec 64))
(declare-fun retval.0.i.i36.i_48_289 () (_ BitVec 32))
(declare-fun retval.sroa.0.0.i.i_48_298 () (_ BitVec 64))
(declare-fun and.i.i15_48_296 () (_ BitVec 64))
(assert (let ((a!1 (and (= cmp31.i.i8_48_76 #b1)
                (and (= cmp16.i.i_48_72 #b0) (= or.cond_48_66 #b0))))
      (a!3 (and (= cmp31.i.i8_48_76 #b0)
                (and (= cmp16.i.i_48_72 #b0) (= or.cond_48_66 #b0))))
      (a!18 (=> (and (= cmp16.i.i_48_72 #b1) (= or.cond_48_66 #b0))
                (and (ite (bvult cond14.i.i_48_33 cond36.i.i_48_42)
                          (= cmp23.i.i_48_73 #b1)
                          (= cmp23.i.i_48_73 #b0))
                     (ite (= cmp23.i.i_48_73 #b1)
                          (= cond27.i.i_48_74 cond14.i.i_48_33)
                          (= cond27.i.i_48_74 cond36.i.i_48_42)))))
      (a!20 (=> (= or.cond_48_66 #b0)
                (and (ite (bvsgt cond36.i.i_48_42 #xffffffff)
                          (= cmp16.i.i_48_72 #b1)
                          (= cmp16.i.i_48_72 #b0)))))
      (a!22 (=> (and (= cmp16.i.i_48_72 #b0) (= or.cond_48_66 #b0))
                (and (ite (bvslt cond24.i.i_48_37 #x00000000)
                          (= cmp31.i.i8_48_76 #b1)
                          (= cmp31.i.i8_48_76 #b0)))))
      (a!27 (=> (= or.cond_48_66 #b1)
                (and (ite (bvugt cond.i.i_48_26 cond24.i.i_48_37)
                          (= cmp3.i.i_48_67 #b1)
                          (= cmp3.i.i_48_67 #b0))
                     (ite (= cmp3.i.i_48_67 #b1)
                          (= cond.i.i6_48_68 cond.i.i_48_26)
                          (= cond.i.i6_48_68 cond24.i.i_48_37))
                     (ite (bvult cond14.i.i_48_33 cond36.i.i_48_42)
                          (= cmp8.i.i_48_69 #b1)
                          (= cmp8.i.i_48_69 #b0))
                     (ite (= cmp8.i.i_48_69 #b1)
                          (= cond12.i.i_48_70 cond14.i.i_48_33)
                          (= cond12.i.i_48_70 cond36.i.i_48_42))))))
(let ((a!2 (or a!1
               (and (= cmp16.i.i_48_72 #b1) (= or.cond_48_66 #b0))
               (= or.cond_48_66 #b1)))
      (a!17 (=> a!1
                (and (ite (bvugt cond.i.i_48_26 cond24.i.i_48_37)
                          (= cmp36.i.i_48_77 #b1)
                          (= cmp36.i.i_48_77 #b0))
                     (ite (= cmp36.i.i_48_77 #b1)
                          (= cond40.i.i_48_78 cond.i.i_48_26)
                          (= cond40.i.i_48_78 cond24.i.i_48_37)))))
      (a!23 (and (=> if.then32.i.i___reg32_deduce_bounds.exit.i.sink.split_48_97
                     (= cond36.i.i.sink_48_100 cond36.i.i_48_42))
                 (=> if.then17.i.i___reg32_deduce_bounds.exit.i.sink.split_48_98
                     (= cond36.i.i.sink_48_100 cond27.i.i_48_74))
                 (=> if.then.i.i___reg32_deduce_bounds.exit.i.sink.split_48_99
                     (= cond36.i.i.sink_48_100 cond12.i.i_48_70))
                 (=> (= or.cond_48_66 #b1)
                     (and (= dst_reg_48_0 dst_reg_48_79)
                          (= dst_reg_48_1 dst_reg_48_80)
                          (= dst_reg_48_2 dst_reg_48_81)
                          (= dst_reg_48_3 dst_reg_48_82)
                          (= dst_reg_48_4 dst_reg_48_83)
                          (= dst_reg_48_5 dst_reg_48_84)
                          (= cond.i7.i_48_48 dst_reg_48_85)
                          (= cond14.i8.i_48_54 dst_reg_48_86)
                          (= cond23.i.i_48_57 dst_reg_48_87)
                          (= cond35.i.i_48_60 dst_reg_48_88)
                          (= cond.i.i6_48_68 dst_reg_48_89)
                          (= cond14.i.i_48_33 dst_reg_48_90)
                          (= cond.i.i6_48_68 dst_reg_48_91)
                          (= cond12.i.i_48_70 dst_reg_48_92)
                          (= dst_reg_48_14 dst_reg_48_93)
                          (= dst_reg_48_15 dst_reg_48_94)
                          (= dst_reg_48_16 dst_reg_48_95)
                          (= dst_reg_48_17 dst_reg_48_96)))
                 (=> (and (= cmp16.i.i_48_72 #b1) (= or.cond_48_66 #b0))
                     (and (= dst_reg_48_0 dst_reg_48_79)
                          (= dst_reg_48_1 dst_reg_48_80)
                          (= dst_reg_48_2 dst_reg_48_81)
                          (= dst_reg_48_3 dst_reg_48_82)
                          (= dst_reg_48_4 dst_reg_48_83)
                          (= dst_reg_48_5 dst_reg_48_84)
                          (= cond.i7.i_48_48 dst_reg_48_85)
                          (= cond14.i8.i_48_54 dst_reg_48_86)
                          (= cond23.i.i_48_57 dst_reg_48_87)
                          (= cond35.i.i_48_60 dst_reg_48_88)
                          (= cond24.i.i_48_37 dst_reg_48_89)
                          (= cond14.i.i_48_33 dst_reg_48_90)
                          (= cond24.i.i_48_37 dst_reg_48_91)
                          (= cond27.i.i_48_74 dst_reg_48_92)
                          (= dst_reg_48_14 dst_reg_48_93)
                          (= dst_reg_48_15 dst_reg_48_94)
                          (= dst_reg_48_16 dst_reg_48_95)
                          (= dst_reg_48_17 dst_reg_48_96)))
                 (=> a!1
                     (and (= dst_reg_48_0 dst_reg_48_79)
                          (= dst_reg_48_1 dst_reg_48_80)
                          (= dst_reg_48_2 dst_reg_48_81)
                          (= dst_reg_48_3 dst_reg_48_82)
                          (= dst_reg_48_4 dst_reg_48_83)
                          (= dst_reg_48_5 dst_reg_48_84)
                          (= cond.i7.i_48_48 dst_reg_48_85)
                          (= cond14.i8.i_48_54 dst_reg_48_86)
                          (= cond23.i.i_48_57 dst_reg_48_87)
                          (= cond35.i.i_48_60 dst_reg_48_88)
                          (= cond40.i.i_48_78 dst_reg_48_89)
                          (= cond14.i.i_48_33 dst_reg_48_90)
                          (= cond40.i.i_48_78 dst_reg_48_91)
                          (= cond36.i.i_48_42 dst_reg_48_92)
                          (= dst_reg_48_14 dst_reg_48_93)
                          (= dst_reg_48_15 dst_reg_48_94)
                          (= dst_reg_48_16 dst_reg_48_95)
                          (= dst_reg_48_17 dst_reg_48_96)))
                 (= if.then32.i.i___reg32_deduce_bounds.exit.i.sink.split_48_97
                    a!1)
                 (= if.then17.i.i___reg32_deduce_bounds.exit.i.sink.split_48_98
                    (and (= cmp16.i.i_48_72 #b1) (= or.cond_48_66 #b0)))
                 (= if.then.i.i___reg32_deduce_bounds.exit.i.sink.split_48_99
                    (= or.cond_48_66 #b1)))))
(let ((a!4 (and (= cmp16.i15.i_48_130 #b0)
                (and (= or.cond4_48_124 #b0) (or a!2 a!3))))
      (a!5 (and (= cmp16.i15.i_48_130 #b1)
                (and (= or.cond4_48_124 #b0) (or a!2 a!3))))
      (a!19 (=> (and (= or.cond4_48_124 #b0) (or a!2 a!3))
                (and (ite (bvsgt cond35.i.i_48_60 #xffffffffffffffff)
                          (= cmp16.i15.i_48_130 #b1)
                          (= cmp16.i15.i_48_130 #b0)))))
      (a!24 (and (ite (bvsgt cond.i7.i_48_48 #xffffffffffffffff)
                      (= cmp.i2.i_48_120 #b1)
                      (= cmp.i2.i_48_120 #b0))
                 (ite (bvslt cond14.i8.i_48_54 #x0000000000000000)
                      (= cmp1.i4.i_48_122 #b1)
                      (= cmp1.i4.i_48_122 #b0))
                 (ite (= cmp.i2.i_48_120 #b1)
                      (= or.cond4_48_124 #b1)
                      (= or.cond4_48_124 cmp1.i4.i_48_122))
                 (=> a!2
                     (and (= dst_reg_48_79 dst_reg_48_101)
                          (= dst_reg_48_80 dst_reg_48_102)
                          (= dst_reg_48_81 dst_reg_48_103)
                          (= dst_reg_48_82 dst_reg_48_104)
                          (= dst_reg_48_83 dst_reg_48_105)
                          (= dst_reg_48_84 dst_reg_48_106)
                          (= dst_reg_48_85 dst_reg_48_107)
                          (= dst_reg_48_86 dst_reg_48_108)
                          (= dst_reg_48_87 dst_reg_48_109)
                          (= dst_reg_48_88 dst_reg_48_110)
                          (= dst_reg_48_89 dst_reg_48_111)
                          (= cond36.i.i.sink_48_100 dst_reg_48_112)
                          (= dst_reg_48_91 dst_reg_48_113)
                          (= dst_reg_48_92 dst_reg_48_114)
                          (= dst_reg_48_93 dst_reg_48_115)
                          (= dst_reg_48_94 dst_reg_48_116)
                          (= dst_reg_48_95 dst_reg_48_117)
                          (= dst_reg_48_96 dst_reg_48_118)))
                 (=> a!3
                     (and (= dst_reg_48_0 dst_reg_48_101)
                          (= dst_reg_48_1 dst_reg_48_102)
                          (= dst_reg_48_2 dst_reg_48_103)
                          (= dst_reg_48_3 dst_reg_48_104)
                          (= dst_reg_48_4 dst_reg_48_105)
                          (= dst_reg_48_5 dst_reg_48_106)
                          (= cond.i7.i_48_48 dst_reg_48_107)
                          (= cond14.i8.i_48_54 dst_reg_48_108)
                          (= cond23.i.i_48_57 dst_reg_48_109)
                          (= cond35.i.i_48_60 dst_reg_48_110)
                          (= cond.i.i_48_26 dst_reg_48_111)
                          (= cond14.i.i_48_33 dst_reg_48_112)
                          (= cond24.i.i_48_37 dst_reg_48_113)
                          (= cond36.i.i_48_42 dst_reg_48_114)
                          (= dst_reg_48_14 dst_reg_48_115)
                          (= dst_reg_48_15 dst_reg_48_116)
                          (= dst_reg_48_16 dst_reg_48_117)
                          (= dst_reg_48_17 dst_reg_48_118)))))
      (a!26 (=> (and (= or.cond4_48_124 #b1) (or a!2 a!3))
                (and (ite (bvugt cond.i7.i_48_48 cond23.i.i_48_57)
                          (= cmp3.i7.i_48_125 #b1)
                          (= cmp3.i7.i_48_125 #b0))
                     (ite (= cmp3.i7.i_48_125 #b1)
                          (= cond.i8.i_48_126 cond.i7.i_48_48)
                          (= cond.i8.i_48_126 cond23.i.i_48_57))
                     (ite (bvult cond14.i8.i_48_54 cond35.i.i_48_60)
                          (= cmp8.i11.i_48_127 #b1)
                          (= cmp8.i11.i_48_127 #b0))
                     (ite (= cmp8.i11.i_48_127 #b1)
                          (= cond12.i12.i_48_128 cond14.i8.i_48_54)
                          (= cond12.i12.i_48_128 cond35.i.i_48_60))))))
(let ((a!6 (or (and (= cmp31.i21.i_48_134 #b1) a!4)
               a!5
               (and (= or.cond4_48_124 #b1) (or a!2 a!3))))
      (a!16 (and (=> if.then32.i25.i___reg_deduce_bounds.exit.sink.split_48_155
                     (= cond35.i.i.sink_48_158 cond35.i.i_48_60))
                 (=> if.then17.i20.i___reg_deduce_bounds.exit.sink.split_48_156
                     (= cond35.i.i.sink_48_158 cond27.i19.i_48_132))
                 (=> if.then.i13.i___reg_deduce_bounds.exit.sink.split_48_157
                     (= cond35.i.i.sink_48_158 cond12.i12.i_48_128))
                 (=> (and (= or.cond4_48_124 #b1) (or a!2 a!3))
                     (and (= dst_reg_48_101 dst_reg_48_137)
                          (= dst_reg_48_102 dst_reg_48_138)
                          (= dst_reg_48_103 dst_reg_48_139)
                          (= dst_reg_48_104 dst_reg_48_140)
                          (= dst_reg_48_105 dst_reg_48_141)
                          (= dst_reg_48_106 dst_reg_48_142)
                          (= cond.i8.i_48_126 dst_reg_48_143)
                          (= dst_reg_48_108 dst_reg_48_144)
                          (= cond.i8.i_48_126 dst_reg_48_145)
                          (= cond12.i12.i_48_128 dst_reg_48_146)
                          (= dst_reg_48_111 dst_reg_48_147)
                          (= dst_reg_48_112 dst_reg_48_148)
                          (= dst_reg_48_113 dst_reg_48_149)
                          (= dst_reg_48_114 dst_reg_48_150)
                          (= dst_reg_48_115 dst_reg_48_151)
                          (= dst_reg_48_116 dst_reg_48_152)
                          (= dst_reg_48_117 dst_reg_48_153)
                          (= dst_reg_48_118 dst_reg_48_154)))
                 (=> a!5
                     (and (= dst_reg_48_101 dst_reg_48_137)
                          (= dst_reg_48_102 dst_reg_48_138)
                          (= dst_reg_48_103 dst_reg_48_139)
                          (= dst_reg_48_104 dst_reg_48_140)
                          (= dst_reg_48_105 dst_reg_48_141)
                          (= dst_reg_48_106 dst_reg_48_142)
                          (= cond23.i.i_48_57 dst_reg_48_143)
                          (= dst_reg_48_108 dst_reg_48_144)
                          (= dst_reg_48_109 dst_reg_48_145)
                          (= cond27.i19.i_48_132 dst_reg_48_146)
                          (= dst_reg_48_111 dst_reg_48_147)
                          (= dst_reg_48_112 dst_reg_48_148)
                          (= dst_reg_48_113 dst_reg_48_149)
                          (= dst_reg_48_114 dst_reg_48_150)
                          (= dst_reg_48_115 dst_reg_48_151)
                          (= dst_reg_48_116 dst_reg_48_152)
                          (= dst_reg_48_117 dst_reg_48_153)
                          (= dst_reg_48_118 dst_reg_48_154)))
                 (=> (and (= cmp31.i21.i_48_134 #b1) a!4)
                     (and (= dst_reg_48_101 dst_reg_48_137)
                          (= dst_reg_48_102 dst_reg_48_138)
                          (= dst_reg_48_103 dst_reg_48_139)
                          (= dst_reg_48_104 dst_reg_48_140)
                          (= dst_reg_48_105 dst_reg_48_141)
                          (= dst_reg_48_106 dst_reg_48_142)
                          (= cond40.i24.i_48_136 dst_reg_48_143)
                          (= dst_reg_48_108 dst_reg_48_144)
                          (= cond40.i24.i_48_136 dst_reg_48_145)
                          (= dst_reg_48_110 dst_reg_48_146)
                          (= dst_reg_48_111 dst_reg_48_147)
                          (= dst_reg_48_112 dst_reg_48_148)
                          (= dst_reg_48_113 dst_reg_48_149)
                          (= dst_reg_48_114 dst_reg_48_150)
                          (= dst_reg_48_115 dst_reg_48_151)
                          (= dst_reg_48_116 dst_reg_48_152)
                          (= dst_reg_48_117 dst_reg_48_153)
                          (= dst_reg_48_118 dst_reg_48_154)))
                 (= if.then32.i25.i___reg_deduce_bounds.exit.sink.split_48_155
                    (and (= cmp31.i21.i_48_134 #b1) a!4))
                 (= if.then17.i20.i___reg_deduce_bounds.exit.sink.split_48_156
                    a!5)
                 (= if.then.i13.i___reg_deduce_bounds.exit.sink.split_48_157
                    (and (= or.cond4_48_124 #b1) (or a!2 a!3)))))
      (a!21 (=> a!4
                (and (ite (bvslt cond23.i.i_48_57 #x0000000000000000)
                          (= cmp31.i21.i_48_134 #b1)
                          (= cmp31.i21.i_48_134 #b0)))))
      (a!25 (=> (and (= cmp31.i21.i_48_134 #b1) a!4)
                (and (ite (bvugt cond.i7.i_48_48 cond23.i.i_48_57)
                          (= cmp36.i23.i_48_135 #b1)
                          (= cmp36.i23.i_48_135 #b0))
                     (ite (= cmp36.i23.i_48_135 #b1)
                          (= cond40.i24.i_48_136 cond.i7.i_48_48)
                          (= cond40.i24.i_48_136 cond23.i.i_48_57)))))
      (a!28 (=> a!5
                (and (ite (bvult cond14.i8.i_48_54 cond35.i.i_48_60)
                          (= cmp23.i18.i_48_131 #b1)
                          (= cmp23.i18.i_48_131 #b0))
                     (ite (= cmp23.i18.i_48_131 #b1)
                          (= cond27.i19.i_48_132 cond14.i8.i_48_54)
                          (= cond27.i19.i_48_132 cond35.i.i_48_60))))))
(let ((a!7 (and (= cmp.i.i.i_48_181 #b0)
                (or a!6 (and (= cmp31.i21.i_48_134 #b0) a!4))))
      (a!8 (and (= cmp.i.i.i_48_181 #b1)
                (or a!6 (and (= cmp31.i21.i_48_134 #b0) a!4))))
      (a!13 (and (= dst_reg_48_167 i.i_48_177)
                 (= dst_reg_48_168 i8.i_48_178)
                 (= xor.i.i_48_179 (bvxor i8.i_48_178 i.i_48_177))
                 (ite (= xor.i.i_48_179 #x0000000000000000)
                      (= cmp.i.i.i_48_181 #b1)
                      (= cmp.i.i.i_48_181 #b0))
                 (=> a!6
                     (and (= dst_reg_48_137 dst_reg_48_159)
                          (= dst_reg_48_138 dst_reg_48_160)
                          (= dst_reg_48_139 dst_reg_48_161)
                          (= dst_reg_48_140 dst_reg_48_162)
                          (= dst_reg_48_141 dst_reg_48_163)
                          (= dst_reg_48_142 dst_reg_48_164)
                          (= dst_reg_48_143 dst_reg_48_165)
                          (= cond35.i.i.sink_48_158 dst_reg_48_166)
                          (= dst_reg_48_145 dst_reg_48_167)
                          (= dst_reg_48_146 dst_reg_48_168)
                          (= dst_reg_48_147 dst_reg_48_169)
                          (= dst_reg_48_148 dst_reg_48_170)
                          (= dst_reg_48_149 dst_reg_48_171)
                          (= dst_reg_48_150 dst_reg_48_172)
                          (= dst_reg_48_151 dst_reg_48_173)
                          (= dst_reg_48_152 dst_reg_48_174)
                          (= dst_reg_48_153 dst_reg_48_175)
                          (= dst_reg_48_154 dst_reg_48_176)))
                 (=> (and (= cmp31.i21.i_48_134 #b0) a!4)
                     (and (= dst_reg_48_101 dst_reg_48_159)
                          (= dst_reg_48_102 dst_reg_48_160)
                          (= dst_reg_48_103 dst_reg_48_161)
                          (= dst_reg_48_104 dst_reg_48_162)
                          (= dst_reg_48_105 dst_reg_48_163)
                          (= dst_reg_48_106 dst_reg_48_164)
                          (= dst_reg_48_107 dst_reg_48_165)
                          (= dst_reg_48_108 dst_reg_48_166)
                          (= dst_reg_48_109 dst_reg_48_167)
                          (= dst_reg_48_110 dst_reg_48_168)
                          (= dst_reg_48_111 dst_reg_48_169)
                          (= dst_reg_48_112 dst_reg_48_170)
                          (= dst_reg_48_113 dst_reg_48_171)
                          (= dst_reg_48_114 dst_reg_48_172)
                          (= dst_reg_48_115 dst_reg_48_173)
                          (= dst_reg_48_116 dst_reg_48_174)
                          (= dst_reg_48_117 dst_reg_48_175)
                          (= dst_reg_48_118 dst_reg_48_176))))))
(let ((a!9 (and (=> if.end.i.i35.i___reg_bound_offset.exit_48_287
                    (= retval.0.i.i36.i_48_289 phi.bo3_48_286))
                (=> tnum_range.exit.i___reg_bound_offset.exit_48_288
                    (= retval.0.i.i36.i_48_289 #x00000000))
                (= conv.i_48_291 ((_ zero_extend 32) i19.i_48_242))
                (= and6.i.i.i_48_293 (bvand i24.i.i_48_19 #x00000000ffffffff))
                (= and.i.i.i_48_295 (bvand i22.i.i_48_18 #x00000000ffffffff))
                (= and.i.i15_48_296 (bvand notmask.i.i_48_236 i.i_48_177))
                (ite (= cmp.i.i14_48_233 #b1)
                     (= retval.sroa.0.0.i.i_48_298 #x0000000000000000)
                     (= retval.sroa.0.0.i.i_48_298 and.i.i15_48_296))
                (= or.i.i16_48_299
                   (bvor retval.sroa.0.0.i.i_48_298 i22.i.i_48_18))
                (ite (bvugt retval.0.i.i36.i_48_289 #x0000003f)
                     (= cmp.i38.i_48_301 #b1)
                     (= cmp.i38.i_48_301 #b0))
                (= sh_prom.i39.i_48_302
                   ((_ zero_extend 32) retval.0.i.i36.i_48_289))
                (= notmask.i40.i_48_304
                   (bvshl #xffffffffffffffff sh_prom.i39.i_48_302))
                (= sub.i41.i_48_306
                   (bvxor notmask.i40.i_48_304 #xffffffffffffffff))
                (= and.i42.i_48_307 (bvand notmask.i40.i_48_304 conv.i_48_291))
                (ite (= cmp.i38.i_48_301 #b1)
                     (= retval.sroa.0.0.i43.i_48_309 #x0000000000000000)
                     (= retval.sroa.0.0.i43.i_48_309 and.i42.i_48_307))
                (ite (= cmp.i38.i_48_301 #b1)
                     (= retval.sroa.3.0.i44.i_48_311 #x00000000ffffffff)
                     (= retval.sroa.3.0.i44.i_48_311 sub.i41.i_48_306))
                (= or.i48.i_48_312
                   (bvor retval.sroa.0.0.i43.i_48_309 and.i.i.i_48_295))
                (= and.i49.i_48_313
                   (bvand and6.i.i.i_48_293 retval.sroa.3.0.i44.i_48_311))
                (= neg.i50.i_48_315 (bvxor and.i49.i_48_313 #xffffffffffffffff))
                (= and4.i51.i_48_316 (bvand or.i48.i_48_312 neg.i50.i_48_315))
                (= neg.i.i_48_318 (bvand and.i1.i_48_241 #xffffffff00000000))
                (= and4.i.i_48_320 (bvxor neg.i.i_48_318 #xffffffff00000000))
                (= shr.i.i.i_48_321 (bvand and4.i.i_48_320 or.i.i16_48_299))
                (= shr5.i.i.i_48_323 (bvand and.i1.i_48_241 #xffffffff00000000))
                (= or.i56.i_48_324 (bvor and4.i51.i_48_316 shr.i.i.i_48_321))
                (= or3.i.i_48_325 (bvor and.i49.i_48_313 shr5.i.i.i_48_323))
                (= neg.i57.i_48_327 (bvxor or.i56.i_48_324 #xffffffffffffffff))
                (= and.i58.i_48_328 (bvand or3.i.i_48_325 neg.i57.i_48_327))
                (= if.end.i.i35.i___reg_bound_offset.exit_48_287
                   (and (= cmp.i.i5.i_48_246 #b0) (or a!7 a!8)))
                (= tnum_range.exit.i___reg_bound_offset.exit_48_288
                   (and (= cmp.i.i5.i_48_246 #b1) (or a!7 a!8)))
                (= dst_reg_48_159 dst_reg_48_329)
                (= dst_reg_48_160 dst_reg_48_330)
                (= dst_reg_48_161 dst_reg_48_331)
                (= dst_reg_48_162 dst_reg_48_332)
                (= or.i56.i_48_324 dst_reg_48_333)
                (= and.i58.i_48_328 dst_reg_48_334)
                (= dst_reg_48_165 dst_reg_48_335)
                (= dst_reg_48_166 dst_reg_48_336)
                (= dst_reg_48_167 dst_reg_48_337)
                (= dst_reg_48_168 dst_reg_48_338)
                (= dst_reg_48_169 dst_reg_48_339)
                (= dst_reg_48_170 dst_reg_48_340)
                (= dst_reg_48_171 dst_reg_48_341)
                (= dst_reg_48_172 dst_reg_48_342)
                (= dst_reg_48_173 dst_reg_48_343)
                (= dst_reg_48_174 dst_reg_48_344)
                (= dst_reg_48_175 dst_reg_48_345)
                (= dst_reg_48_176 dst_reg_48_346)))
      (a!11 (=> (and (= cmp.i.i5.i_48_246 #b0) (or a!7 a!8))
                (and (= xor.i4.i_48_247 ((_ zero_extend 32) xor.i4.i2_48_244))
                     (ite (bvult xor.i4.i2_48_244 #x00010000)
                          (= tobool2.not.i.i.i10.i_48_249 #b1)
                          (= tobool2.not.i.i.i10.i_48_249 #b0))
                     (ite (= tobool2.not.i.i.i10.i_48_249 #b1)
                          (= word.addr.1.i.i.i13.i.v_48_252 #x0000000000000030)
                          (= word.addr.1.i.i.i13.i.v_48_252 #x0000000000000020))
                     (= word.addr.1.i.i.i13.i_48_253
                        (bvshl xor.i4.i_48_247 word.addr.1.i.i.i13.i.v_48_252))
                     (ite (= tobool2.not.i.i.i10.i_48_249 #b1)
                          (= num.1.i.i.i14.i_48_256 #x0000000f)
                          (= num.1.i.i.i14.i_48_256 #x0000001f))
                     (ite (bvult word.addr.1.i.i.i13.i_48_253
                                 #x0100000000000000)
                          (= tobool8.not.i.i.i15.i_48_258 #b1)
                          (= tobool8.not.i.i.i15.i_48_258 #b0))
                     (= sub10.i.i.i16.i_48_260
                        (bvadd num.1.i.i.i14.i_48_256 #xfffffff8))
                     (= shl11.i.i.i17.i_48_262
                        (bvshl word.addr.1.i.i.i13.i_48_253 #x0000000000000008))
                     (ite (= tobool8.not.i.i.i15.i_48_258 #b1)
                          (= word.addr.2.i.i.i18.i_48_263
                             shl11.i.i.i17.i_48_262)
                          (= word.addr.2.i.i.i18.i_48_263
                             word.addr.1.i.i.i13.i_48_253))
                     (ite (= tobool8.not.i.i.i15.i_48_258 #b1)
                          (= num.2.i.i.i19.i_48_264 sub10.i.i.i16.i_48_260)
                          (= num.2.i.i.i19.i_48_264 num.1.i.i.i14.i_48_256))
                     (ite (bvult word.addr.2.i.i.i18.i_48_263
                                 #x1000000000000000)
                          (= tobool14.not.i.i.i20.i_48_266 #b1)
                          (= tobool14.not.i.i.i20.i_48_266 #b0))
                     (= sub16.i.i.i21.i_48_268
                        (bvadd num.2.i.i.i19.i_48_264 #xfffffffc))
                     (= shl17.i.i.i22.i_48_270
                        (bvshl word.addr.2.i.i.i18.i_48_263 #x0000000000000004))
                     (ite (= tobool14.not.i.i.i20.i_48_266 #b1)
                          (= word.addr.3.i.i.i23.i_48_271
                             shl17.i.i.i22.i_48_270)
                          (= word.addr.3.i.i.i23.i_48_271
                             word.addr.2.i.i.i18.i_48_263))
                     (ite (= tobool14.not.i.i.i20.i_48_266 #b1)
                          (= num.3.i.i.i24.i_48_272 sub16.i.i.i21.i_48_268)
                          (= num.3.i.i.i24.i_48_272 num.2.i.i.i19.i_48_264))
                     (ite (bvult word.addr.3.i.i.i23.i_48_271
                                 #x4000000000000000)
                          (= tobool20.not.i.i.i25.i_48_274 #b1)
                          (= tobool20.not.i.i.i25.i_48_274 #b0))
                     (= sub22.i.i.i26.i_48_276
                        (bvadd num.3.i.i.i24.i_48_272 #x000000fe))
                     (= shl23.i.i.i27.i_48_278
                        (bvshl word.addr.3.i.i.i23.i_48_271 #x0000000000000002))
                     (ite (= tobool20.not.i.i.i25.i_48_274 #b1)
                          (= word.addr.4.i.i.i28.i_48_279
                             shl23.i.i.i27.i_48_278)
                          (= word.addr.4.i.i.i28.i_48_279
                             word.addr.3.i.i.i23.i_48_271))
                     (ite (= tobool20.not.i.i.i25.i_48_274 #b1)
                          (= num.4.i.i.i29.i_48_280 sub22.i.i.i26.i_48_276)
                          (= num.4.i.i.i29.i_48_280 num.3.i.i.i24.i_48_272))
                     (= word.addr.4.lobit.i.i.i30.i.neg_48_282
                        (bvlshr word.addr.4.i.i.i28.i_48_279 #x000000000000003f))
                     (= i.i.i.i31.i.neg_48_283
                        ((_ extract 31 0)
                          word.addr.4.lobit.i.i.i30.i.neg_48_282))
                     (= add.i.i34.i_48_284
                        (bvadd num.4.i.i.i29.i_48_280 i.i.i.i31.i.neg_48_283))
                     (= phi.bo3_48_286 (bvand add.i.i34.i_48_284 #x000000ff)))))
      (a!12 (=> (or a!7 a!8)
                (and (=> if.end.i.i.i_tnum_range.exit.i_48_228
                         (= retval.0.i.i.i_48_230 phi.bo_48_227))
                     (=> __reg_deduce_bounds.exit_tnum_range.exit.i_48_229
                         (= retval.0.i.i.i_48_230 #x00000000))
                     (ite (bvugt retval.0.i.i.i_48_230 #x0000003f)
                          (= cmp.i.i14_48_233 #b1)
                          (= cmp.i.i14_48_233 #b0))
                     (= sh_prom.i.i_48_234
                        ((_ zero_extend 32) retval.0.i.i.i_48_230))
                     (= notmask.i.i_48_236
                        (bvshl #xffffffffffffffff sh_prom.i.i_48_234))
                     (= sub.i.i_48_238
                        (bvxor notmask.i.i_48_236 #xffffffffffffffff))
                     (ite (= cmp.i.i14_48_233 #b1)
                          (= retval.sroa.3.0.i.i_48_240 #xffffffffffffffff)
                          (= retval.sroa.3.0.i.i_48_240 sub.i.i_48_238))
                     (= and.i1.i_48_241
                        (bvand retval.sroa.3.0.i.i_48_240 i24.i.i_48_19))
                     (= dst_reg_48_113 i19.i_48_242)
                     (= dst_reg_48_114 i20.i_48_243)
                     (= xor.i4.i2_48_244 (bvxor i20.i_48_243 i19.i_48_242))
                     (ite (= xor.i4.i2_48_244 #x00000000)
                          (= cmp.i.i5.i_48_246 #b1)
                          (= cmp.i.i5.i_48_246 #b0))
                     (= if.end.i.i.i_tnum_range.exit.i_48_228 a!7)
                     (= __reg_deduce_bounds.exit_tnum_range.exit.i_48_229 a!8))))
      (a!14 (=> (or a!6 (and (= cmp31.i21.i_48_134 #b0) a!4)) a!13))
      (a!15 (=> a!7
                (and (ite (bvult xor.i.i_48_179 #x0000000100000000)
                          (= tobool.not.i.i.i.i_48_183 #b1)
                          (= tobool.not.i.i.i.i_48_183 #b0))
                     (= shl.i.i.i.i_48_185
                        (bvshl xor.i.i_48_179 #x0000000000000020))
                     (ite (= tobool.not.i.i.i.i_48_183 #b1)
                          (= spec.select.i.i.i.i_48_186 shl.i.i.i.i_48_185)
                          (= spec.select.i.i.i.i_48_186 xor.i.i_48_179))
                     (ite (= tobool.not.i.i.i.i_48_183 #b1)
                          (= spec.select17.i.i.i.i_48_189 #x0000001f)
                          (= spec.select17.i.i.i.i_48_189 #x0000003f))
                     (ite (bvult spec.select.i.i.i.i_48_186 #x0001000000000000)
                          (= tobool2.not.i.i.i.i_48_191 #b1)
                          (= tobool2.not.i.i.i.i_48_191 #b0))
                     (= sub4.i.i.i.i_48_193
                        (bvadd spec.select17.i.i.i.i_48_189 #xfffffff0))
                     (= shl5.i.i.i.i_48_195
                        (bvshl spec.select.i.i.i.i_48_186 #x0000000000000010))
                     (ite (= tobool2.not.i.i.i.i_48_191 #b1)
                          (= word.addr.1.i.i.i.i_48_196 shl5.i.i.i.i_48_195)
                          (= word.addr.1.i.i.i.i_48_196
                             spec.select.i.i.i.i_48_186))
                     (ite (= tobool2.not.i.i.i.i_48_191 #b1)
                          (= num.1.i.i.i.i_48_197 sub4.i.i.i.i_48_193)
                          (= num.1.i.i.i.i_48_197 spec.select17.i.i.i.i_48_189))
                     (ite (bvult word.addr.1.i.i.i.i_48_196 #x0100000000000000)
                          (= tobool8.not.i.i.i.i_48_199 #b1)
                          (= tobool8.not.i.i.i.i_48_199 #b0))
                     (= sub10.i.i.i.i_48_201
                        (bvadd num.1.i.i.i.i_48_197 #xfffffff8))
                     (= shl11.i.i.i.i_48_203
                        (bvshl word.addr.1.i.i.i.i_48_196 #x0000000000000008))
                     (ite (= tobool8.not.i.i.i.i_48_199 #b1)
                          (= word.addr.2.i.i.i.i_48_204 shl11.i.i.i.i_48_203)
                          (= word.addr.2.i.i.i.i_48_204
                             word.addr.1.i.i.i.i_48_196))
                     (ite (= tobool8.not.i.i.i.i_48_199 #b1)
                          (= num.2.i.i.i.i_48_205 sub10.i.i.i.i_48_201)
                          (= num.2.i.i.i.i_48_205 num.1.i.i.i.i_48_197))
                     (ite (bvult word.addr.2.i.i.i.i_48_204 #x1000000000000000)
                          (= tobool14.not.i.i.i.i_48_207 #b1)
                          (= tobool14.not.i.i.i.i_48_207 #b0))
                     (= sub16.i.i.i.i_48_209
                        (bvadd num.2.i.i.i.i_48_205 #xfffffffc))
                     (= shl17.i.i.i.i_48_211
                        (bvshl word.addr.2.i.i.i.i_48_204 #x0000000000000004))
                     (ite (= tobool14.not.i.i.i.i_48_207 #b1)
                          (= word.addr.3.i.i.i.i_48_212 shl17.i.i.i.i_48_211)
                          (= word.addr.3.i.i.i.i_48_212
                             word.addr.2.i.i.i.i_48_204))
                     (ite (= tobool14.not.i.i.i.i_48_207 #b1)
                          (= num.3.i.i.i.i_48_213 sub16.i.i.i.i_48_209)
                          (= num.3.i.i.i.i_48_213 num.2.i.i.i.i_48_205))
                     (ite (bvult word.addr.3.i.i.i.i_48_212 #x4000000000000000)
                          (= tobool20.not.i.i.i.i_48_215 #b1)
                          (= tobool20.not.i.i.i.i_48_215 #b0))
                     (= sub22.i.i.i.i_48_217
                        (bvadd num.3.i.i.i.i_48_213 #x000000fe))
                     (= shl23.i.i.i.i_48_219
                        (bvshl word.addr.3.i.i.i.i_48_212 #x0000000000000002))
                     (ite (= tobool20.not.i.i.i.i_48_215 #b1)
                          (= word.addr.4.i.i.i.i_48_220 shl23.i.i.i.i_48_219)
                          (= word.addr.4.i.i.i.i_48_220
                             word.addr.3.i.i.i.i_48_212))
                     (ite (= tobool20.not.i.i.i.i_48_215 #b1)
                          (= num.4.i.i.i.i_48_221 sub22.i.i.i.i_48_217)
                          (= num.4.i.i.i.i_48_221 num.3.i.i.i.i_48_213))
                     (= word.addr.4.lobit.i.i.i.i.neg_48_223
                        (bvlshr word.addr.4.i.i.i.i_48_220 #x000000000000003f))
                     (= i.i.i.i.i.neg_48_224
                        ((_ extract 31 0) word.addr.4.lobit.i.i.i.i.neg_48_223))
                     (= add.i.i.i_48_225
                        (bvadd num.4.i.i.i.i_48_221 i.i.i.i.i.neg_48_224))
                     (= phi.bo_48_227 (bvand add.i.i.i_48_225 #x000000ff))))))
(let ((a!10 (=> (or (and (= cmp.i.i5.i_48_246 #b0) (or a!7 a!8))
                    (and (= cmp.i.i5.i_48_246 #b1) (or a!7 a!8)))
                a!9)))
  (and a!10
       a!11
       a!12
       a!14
       a!15
       (=> a!6 a!16)
       a!17
       a!18
       a!19
       a!20
       a!21
       (= dst_reg_48_0 dst_reg_48_0)
       (= dst_reg_48_1 dst_reg_48_1)
       (= dst_reg_48_2 dst_reg_48_2)
       (= dst_reg_48_3 dst_reg_48_3)
       (= dst_reg_48_4 dst_reg_48_4)
       (= dst_reg_48_5 dst_reg_48_5)
       (= dst_reg_48_6 dst_reg_48_6)
       (= dst_reg_48_7 dst_reg_48_7)
       (= dst_reg_48_8 dst_reg_48_8)
       (= dst_reg_48_9 dst_reg_48_9)
       (= dst_reg_48_10 dst_reg_48_10)
       (= dst_reg_48_11 dst_reg_48_11)
       (= dst_reg_48_12 dst_reg_48_12)
       (= dst_reg_48_13 dst_reg_48_13)
       (= dst_reg_48_14 dst_reg_48_14)
       (= dst_reg_48_15 dst_reg_48_15)
       (= dst_reg_48_16 dst_reg_48_16)
       (= dst_reg_48_17 dst_reg_48_17)
       (= dst_reg_48_4 i22.i.i_48_18)
       (= dst_reg_48_5 i24.i.i_48_19)
       (= dst_reg_48_10 i27.i.i_48_20)
       (= and.i.i_48_22 (bvand i24.i.i_48_19 #x0000000080000000))
       (= or.i.i_48_23 (bvor and.i.i_48_22 i22.i.i_48_18))
       (= conv.i.i_48_24 ((_ extract 31 0) or.i.i_48_23))
       (ite (bvsgt i27.i.i_48_20 conv.i.i_48_24)
            (= cmp.i.i_48_25 #b1)
            (= cmp.i.i_48_25 #b0))
       (ite (= cmp.i.i_48_25 #b1)
            (= cond.i.i_48_26 i27.i.i_48_20)
            (= cond.i.i_48_26 conv.i.i_48_24))
       (= dst_reg_48_11 i28.i.i_48_27)
       (= and5.i.i_48_29 (bvand i24.i.i_48_19 #x000000007fffffff))
       (= or6.i.i_48_30 (bvor and5.i.i_48_29 i22.i.i_48_18))
       (= conv7.i.i_48_31 ((_ extract 31 0) or6.i.i_48_30))
       (ite (bvslt i28.i.i_48_27 conv7.i.i_48_31)
            (= cmp9.i.i_48_32 #b1)
            (= cmp9.i.i_48_32 #b0))
       (ite (= cmp9.i.i_48_32 #b1)
            (= cond14.i.i_48_33 i28.i.i_48_27)
            (= cond14.i.i_48_33 conv7.i.i_48_31))
       (= dst_reg_48_12 i29.i.i_48_34)
       (= conv17.i.i_48_35 ((_ extract 31 0) i22.i.i_48_18))
       (ite (bvugt i29.i.i_48_34 conv17.i.i_48_35)
            (= cmp19.i.i_48_36 #b1)
            (= cmp19.i.i_48_36 #b0))
       (ite (= cmp19.i.i_48_36 #b1)
            (= cond24.i.i_48_37 i29.i.i_48_34)
            (= cond24.i.i_48_37 conv17.i.i_48_35))
       (= dst_reg_48_13 i30.i.i_48_38)
       (= and.i.i.i.i1_48_39 (bvor i24.i.i_48_19 i22.i.i_48_18))
       (= conv29.i.i_48_40 ((_ extract 31 0) and.i.i.i.i1_48_39))
       (ite (bvult i30.i.i_48_38 conv29.i.i_48_40)
            (= cmp31.i.i_48_41 #b1)
            (= cmp31.i.i_48_41 #b0))
       (ite (= cmp31.i.i_48_41 #b1)
            (= cond36.i.i_48_42 i30.i.i_48_38)
            (= cond36.i.i_48_42 conv29.i.i_48_40))
       (= dst_reg_48_6 i.i1.i_48_43)
       (= and.i4.i_48_45 (bvand i24.i.i_48_19 #x8000000000000000))
       (= or.i5.i_48_46 (bvor and.i4.i_48_45 i22.i.i_48_18))
       (ite (bvsgt i.i1.i_48_43 or.i5.i_48_46)
            (= cmp.i6.i_48_47 #b1)
            (= cmp.i6.i_48_47 #b0))
       (ite (= cmp.i6.i_48_47 #b1)
            (= cond.i7.i_48_48 i.i1.i_48_43)
            (= cond.i7.i_48_48 or.i5.i_48_46))
       (= dst_reg_48_7 i25.i.i_48_49)
       (= and7.i.i_48_51 (bvand i24.i.i_48_19 #x7fffffffffffffff))
       (= or8.i.i_48_52 (bvor and7.i.i_48_51 i22.i.i_48_18))
       (ite (bvslt i25.i.i_48_49 or8.i.i_48_52)
            (= cmp10.i.i_48_53 #b1)
            (= cmp10.i.i_48_53 #b0))
       (ite (= cmp10.i.i_48_53 #b1)
            (= cond14.i8.i_48_54 i25.i.i_48_49)
            (= cond14.i8.i_48_54 or8.i.i_48_52))
       (= dst_reg_48_8 i26.i.i_48_55)
       (ite (bvugt i26.i.i_48_55 i22.i.i_48_18)
            (= cmp19.i9.i_48_56 #b1)
            (= cmp19.i9.i_48_56 #b0))
       (ite (= cmp19.i9.i_48_56 #b1)
            (= cond23.i.i_48_57 i26.i.i_48_55)
            (= cond23.i.i_48_57 i22.i.i_48_18))
       (= dst_reg_48_9 i27.i10.i_48_58)
       (ite (bvult i27.i10.i_48_58 and.i.i.i.i1_48_39)
            (= cmp31.i11.i_48_59 #b1)
            (= cmp31.i11.i_48_59 #b0))
       (ite (= cmp31.i11.i_48_59 #b1)
            (= cond35.i.i_48_60 i27.i10.i_48_58)
            (= cond35.i.i_48_60 and.i.i.i.i1_48_39))
       (ite (bvsgt cond.i.i_48_26 #xffffffff)
            (= cmp.i.i3_48_62 #b1)
            (= cmp.i.i3_48_62 #b0))
       (ite (bvslt cond14.i.i_48_33 #x00000000)
            (= cmp1.i.i_48_64 #b1)
            (= cmp1.i.i_48_64 #b0))
       (ite (= cmp.i.i3_48_62 #b1)
            (= or.cond_48_66 #b1)
            (= or.cond_48_66 cmp1.i.i_48_64))
       a!22
       (=> a!2 a!23)
       (=> (or a!2 a!3) a!24)
       a!25
       a!26
       a!27
       a!28)))))))))

;{"dst_reg":["dst_reg_48_0",[""],"dst_reg_48_1","dst_reg_48_2","dst_reg_48_3",["dst_reg_48_4","dst_reg_48_5"],"dst_reg_48_6","dst_reg_48_7","dst_reg_48_8","dst_reg_48_9","dst_reg_48_10","dst_reg_48_11","dst_reg_48_12","dst_reg_48_13","","","dst_reg_48_14","dst_reg_48_15","dst_reg_48_16"]}
;{"dst_reg":["dst_reg_48_329",[""],"dst_reg_48_330","dst_reg_48_331","dst_reg_48_332",["dst_reg_48_333","dst_reg_48_334"],"dst_reg_48_335","dst_reg_48_336","dst_reg_48_337","dst_reg_48_338","dst_reg_48_339","dst_reg_48_340","dst_reg_48_341","dst_reg_48_342","","","dst_reg_48_343","dst_reg_48_344","dst_reg_48_345"]}
