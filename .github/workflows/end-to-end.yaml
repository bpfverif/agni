name: End-to-End Tests
on:
  # Run once a day, every day.
  schedule:
    - cron:  '0 0 * * *'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  end-to-end:
    strategy:
      matrix:
        commit: ["bed2eb964c70b780fb55925892a74f26cb590b25", "2ddec2c80b4402c293c7e6e0881cecaaf77e8cec", "314a53623cd4e62e1b88126e5ed2bc87073d90ee", "682158ab532a5bd24399fec25b65fec561f0f6e9", "7c05e7f3e74e7e550534d524e04d7e6f78d6fa24"]
    runs-on: ubuntu-latest
    timeout-minutes: 200
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get install -y --no-install-recommends \
            clang-14 llvm-14 llvm-14-tools llvm \
            python3 python3-pip \
            make cmake libelf-dev \
            libjsoncpp-dev stress-ng \
            libz3-dev

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          cd bpf-verification
          pip install .

      - name: Retrieve Linux sources
        run: |
          tree=git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
          git clone -q $tree linux
          cd linux
          git checkout ${{ matrix.commit }}

      - name: Generate encodings
        id: generate-encodings
        run: |
          set -o xtrace

          mkdir -p bpf-encodings/${{ matrix.commit }}
          cd llvm-to-smt

          python3 generate_encodings.py \
            --kernver 6.10 --commit ${{ matrix.commit }} \
            --kernbasedir "${{ github.workspace }}/linux" \
            --outdir ../bpf-encodings/${{ matrix.commit }} \
            --specific-op BPF_SYNC \
            --modular

      - name: Upload encodings
        if: ${{ always() }} && steps.generate-encodings.outcome != 'skipped'
        uses: actions/upload-artifact@master
        with:
          name: bpf-encodings-${{ matrix.commit }}-BPF_SYNC
          path: bpf-encodings/${{ matrix.commit }}/BPF_SYNC/

      - name: Verify BPF_SYNC on v${{ matrix.commit }}
        id: bpf-verification
        run: |
          mkdir results-${{ matrix.commit }}
          cd bpf-verification
          python3 src/bpf_alu_jmp_synthesis.py --kernver 6.10 --encodings_path ../bpf-encodings/${{ matrix.commit }}/ --res_path ../results-${{ matrix.commit }} --ver_set BPF_SYNC

      - name: Upload results
        if: ${{ always() }} && steps.bpf-verification.outcome != 'skipped'
        uses: actions/upload-artifact@master
        with:
          name: results-${{ matrix.commit }}-BPF_SYNC
          path: results-${{ matrix.commit }}/6.10_res
