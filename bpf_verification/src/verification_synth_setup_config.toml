        #This is a config file for the verification and synthesis process of bpf
        #range analysis. 
        title = "verification and synthesis config file"

        #json_offset should be set to 5 by default - this refers to where
        #abstract domains start in the bpf register struct
		json_offset = 5

        #kernel version to verify and synthesize bugs for
		kernel_ver = "5.9"

        #provide absolute path to bpf encodings dir
		bpf_encodings_path = "/home/matan/bpfverif/bpf_synthesis/bpf_encodings/5.8.auto/"

        #provide path for results directory - this is where result files will be
        #written to
		write_dir_path = "/home/matan/bpfverif/bpf_synthesis/results"

        #program size to synthesize 
		num_synthesis_iter = 3

        #list of specific bpf instructions for synthesis - possible options are
        #"ALU32"|"ALU64"|"JMP32"|"JMP64"|"ALL32"|"ALL64"|"ALL" or a specific
        #list of instructions
        insn_set = ["BPF_JLE_32", "BPF_JSLE_32", "BPF_JNE_32", "BPF_JGE_32", "BPF_JSGE_32", "BPF_JLE", "BPF_JNE", "BPF_JGE", "BPF_JSGE", "BPF_JSLE"]


        #set to be used for initial verification - default should be set to
        #"NULL". If set to "NULL" synthesis insn pool (insn_set) will be used
        #here instead. Specific list of instructions can be used if needs to
        #differ from insn_set.
        verification_set = ['BPF_AND_32', 'BPF_SUB', 'BPF_JGT', 'BPF_JSLE', 'BPF_JEQ', 'BPF_JNE', 'BPF_JSGT', 'BPF_JSGE', 'BPF_OR_32', 'BPF_JLT', 'BPF_OR', 'BPF_AND', 'BPF_JGE', 'BPF_JSLT', 'BPF_JLE']

        #bug typr per bpf instruction dictionary - default value should be empty
        #table but can be set to specific bpf_op: bug_type list pairs
        [bug_dict]
        # BPF_JEQ = ['unsigned_64', 'signed_64']
        # BPF_JNE = ['unsigned_64', 'signed_64']
        #BPF_SUB = ['Tnum', 'unsigned_64', 'signed_64']




        #  insn_set = ["BPF_JLT_32",  "BPF_JLE_32", "BPF_JSLT_32", "BPF_JSLE_32", "BPF_JEQ_32", "BPF_JNE_32", "BPF_JGE_32", "BPF_JGT_32", "BPF_JSGE_32", "BPF_JSGT_32", "BPF_JLT", "BPF_JLE", "BPF_JEQ", "BPF_JNE", "BPF_JGE", "BPF_JGT", "BPF_JSGE", "BPF_JSGT", "BPF_JSLT", "BPF_JSLE"]




